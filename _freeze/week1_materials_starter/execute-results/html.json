{
  "hash": "2c4df15660ce08356ac43570391c7778",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week1 materials\"\nauthor: \"Biagio Palese\"\nformat: live-html\nengine: knitr\n---\n\n\n\n## Intro to R: {style=\"line-height: 1.2; color: rgb(0, 0, 0); font-family: \\\"Lucida Grande\\\", serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"}\n\nThe following sections of our book R for Data Science( [first portion of the course book](http://127.0.0.1:15585/#0){style=\"text-decoration: underline; color: rgb(0, 0, 255) !important;\"} ) are included in the first week:\n\n-   [Introduction](http://127.0.0.1:15585/#0){style=\"text-decoration: underline; color: rgb(0, 0, 255) !important;\"}\n\n-   [Workflow basics](http://127.0.0.1:15585/#0){style=\"text-decoration: underline; color: rgb(0, 0, 255) !important;\"}\n\n### Link to other resources {style=\"font-size: 1.25em !important; line-height: 1.2; color: rgb(0, 0, 0); font-family: \\\"Lucida Grande\\\", serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"}\n\n-   Internal help: [posit support](http://127.0.0.1:15585/#0){style=\"text-decoration: underline; color: rgb(0, 0, 255) !important;\"}\n\n-   External help: [stackoverflow](http://127.0.0.1:15585/#0){style=\"text-decoration: underline; color: rgb(0, 0, 255) !important;\"}\n\n-   Additional materials: [posit resources](http://127.0.0.1:15585/#0){style=\"text-decoration: underline; color: rgb(0, 0, 255) !important;\"}\n\n-   Cheat Sheets: [posit cheat sheets](http://127.0.0.1:15585/#0){style=\"text-decoration: underline; color: rgb(0, 0, 255) !important; margin-bottom: 0.1em;\"}\n\nWhile I use the book as a reference the materials provided to you are custom made and include more activities and resources. If you understand the materials covered in this document there is no need to refer to other sources. If you have any troubles with the materials don't hesitate to contact me or check the above sources.\n\n## Getting Started aka Running code in R {style=\"line-height: 1.2; color: rgb(0, 0, 0); font-family: \\\"Lucida Grande\\\", serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"}\n\nTo run and execute code inside a code chunk simply click the `Run Code` button or make sure that your cursor is anywhere in the line that you want to execute and press Cmd(Mac)/Ctrl(Windows) + Enter to run a single line of code or highlight multiple line and then press Cmd/Ctrl + Enter. Let's try with the below code\n\n\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nprint(\"Welcome to the magic world of R\")\n```\n:::\n\n\n\n### Packages installation\n\nYou will need to install the packages first before be able to use functions and datasets they contain. This is a one time task unless you uninstall R& RStudio or you change your computer. We will need to install a few packages, among them the most important is tidyverse. Tidyverse is the main package for the first part of the semester, it is a bundle package (meaning it contains multiple packages that have different purposes e.g., dplyr for manipulations, ggplot for visualizations)\n\n\n\n::: {.cell startover='false'}\n\n```{.webr .cell-code}\ninstall.packages(\"tidyverse\")# install one packge at the time\ninstall.packages(\n\nc(\"arrow\", \"babynames\", \"curl\", \"duckdb\",\n\n\"gapminder\",\n\n\"ggrepel\", \"ggridges\", \"ggthemes\",\n\n\"hexbin\", \"janitor\", \"Lahman\",\n\n\"leaflet\", \"maps\", \"nycflights13\",\n\n\"openxlsx\", \"palmerpenguins\",\n\n\"repurrrsive\", \"tidymodels\", \"writexl\")\n\n)#install multiple packages that will be useful throught the semester\n```\n:::\n\n\n\n### Load packages\n\nThis is a critical task. Every time you open a new RStudio session you will need to load the packages. Failing to do so will incur in the most common errors among beginners (e.g., function not found or object not found)\n\n\n\n::: {.cell startover='false'}\n\n```{.webr .cell-code}\nlibrary(tidyverse)\nlibrary(nycflights13)\n\n```\n:::\n\n\n\nTake careful note of the conflicts message that’s printed when you load the tidyverse. It tells you that dplyr overwrites some functions in base R. If you want to use the base version of these functions after loading dplyr, you’ll need to use their full names: stats::filter() and stats::lag().\n\n### Need help\n\nIf you are stuck promise me not to quit! You are a beginner so it will happen. Just pay attention to the error message and look at the below option to find a solution:\n\n-   look into the R community or Stackoverflow\n\n-   leverage LLM (e.g., ChatGPT)\n\n-   use help with R documentation (e.g., try ?mean below)\n\n-   check examples of how to use a certain function (e.g., try example(\"mean\") below)\n\n**NB During the exams you can only use the last two options so make sure you master them!**\n\n\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\n?mean# help on a specific function\n\n```\n:::\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nexample(\"mean\")# example on how to use the function\n\n```\n:::\n\n\n\n## Workflow basic script\n\nYou can use R as a calculator..\n\n\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\n#run basic calculations\n10 / 100 * 30\n\n```\n:::\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\n#run basic calculations\n(59 + 73 + 2) / 3\n\n```\n:::\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\n#run basic calculations\nsum(10 / 2, 3)\n```\n:::\n\n\n\n### Creating Object using the Assignement operator\n\nBut it can do much more.. so we need to learn how to create and manage object using the assignment operator.\n\n\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nclass_size <- 50\n```\n:::\n\n\n\n`<-` is the assign operator and it means you are assigning value to an object/variable. You can then call and use the object created later.\n\nThe shortcut option/alt + - will create the assign symbol\n\n### How to manage object?\n\n\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nclass_size# write the object name to print its content\n```\n:::\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nls()#check how many object you have created\n```\n:::\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nrm(class_size)#remove object that you don't need\n\n```\n:::\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nls()#check how many object you have created\n```\n:::\n\n\n\n#### How to name your objects?\n\nObject names must start with a letter, and can only contain letters, numbers, \\_ and .. You want your object names to be descriptive, so you'll need a convention for multiple words.\n\n\n\n::: {.cell autorun='false' startover='false' completion='true'}\n\n```{.webr .cell-code}\nwelcome_to_rstudio <- \"Welcome\" #always use meaningful names but if they are long separate them with a _.\n\n```\n:::\n\n::: {.cell autorun='false' completion='true' startover='false'}\n\n```{.webr .cell-code}\nwelcome_to_rstudio# by running this line you are able to inspect the object/variable\n```\n:::\n\n::: {.cell autorun='false' startover='false' completion='true'}\n\n```{.webr .cell-code}\nthis_is_a_really_long_name_completely_unnecessary <- 2.5 # instead of writing the entire name learn that the tab key allows you to autocomplete\n\n```\n:::\n\n::: {.cell autorun='false' startover='false' completion='true'}\n\n```{.webr .cell-code}\nthis #try the autocompletion feature; we will cover other trick about the tab key later\n```\n:::\n\n\n\nNow let's check your object creation understanding. Given the object below:\n\n\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nr_rocks <- 2 ^ 3\n```\n:::\n\n\n\nWhat happen if I run the following lines; why?\n\n\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nr_rock\n\n```\n:::\n\n::: {.cell autorun='false' startover='false'}\n\n```{.webr .cell-code}\nR_rocks\n```\n:::\n\n\n\n#### Activity 1: Create objects by using the assignment operator (6 minutes) \\[write code just below each instruction; finally use Teams RStudio - Forum channel for help on the in-class activities/homework or if you have other questions\\]\n\n#a. An object named \"today\" that is equal to todays' date\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n\n```\n:::\n\n\n\n#b. An object named \"forty\" that is equal to 6\\*5 +10\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n\n```\n:::\n\n\n\n#c. An object named \"basic_sum\" that is equal to 1+2+3+4+5\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n\n```\n:::\n\n\n\n#d. Write also the code to print the today object\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n\n```\n:::\n\n\n\n### Using functions\n\nFunctions are the real reason why you should use R. There are too many functions to go over or even try remember. In fact, each package will give you access to a different set of functions and sometimes they will use the same name (e.g., remember the conflict with the filter function above). However, the good news is that you don't need to memorize them but understand how they work. Let's start with a basic example, how can we create a sequence of numbers in R?\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n# we want to call the sequence function seq() but press tab and navigate all the functions that start with se\n\nse# Press TAB once more when you’ve selected the function you want. RStudio will add matching opening (() and closing ()) parentheses for you.\n\n```\n:::\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\ny <- seq(1, 10, length.out = 5 #if a function is incomplete R will not think that you are done. Run it and see what happens. Press Esc if you want to discard the operation\n\n#keep in mind that unless your script generate an error the diagnostics (red cross next to the line of code) are there to help you but you can ignore them without any harm, in case the issue is only cosmetic.\n```\n:::\n\n\n\n#### Activity 2: Use basic functions (8 minutes) \\[write code just below each instruction; finally use Teams RStudio - Forum channel for help on the in class activities/homework or if you have other questions\\]\n\n#a. Learn more about the sum function (hint: use the help feature covered today)\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n\n```\n:::\n\n\n\n#b. Use the sum function to compute the sum of all the numbers from 1 to 1000.\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n\n```\n:::\n\n\n\n#c. Assign the above function to an object named \"my_first_function\"\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n\n```\n:::\n\n\n\n#d. Print the object \"my_first_function\"\n\n\n\n::: {.cell autorun='false' completion='true'}\n\n```{.webr .cell-code}\n\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}