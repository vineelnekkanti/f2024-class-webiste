---
title: "Dr. B Learning Leaderboard"
format: html
ojs: true
date: last-modified
---

```{r, echo=FALSE, results='asis'}
# Inject JavaScript to check authentication status and redirect if necessary
cat(htmltools::HTML('<script>
if (localStorage.getItem("isLoggedIn") !== "true") {
    window.location.href = "login.html";
}
</script>'))

```

```{r, echo=FALSE, results='asis'}
# Embed the Confetti library and the confetti animation script
cat(htmltools::HTML('
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.5.1/dist/confetti.browser.min.js"></script>
<script>
  var end = Date.now() + (60 * 1000);
  var colors = ["#C8102E", "#343a40"];

  (function frame() {
    confetti({
      particleCount: 2,   
      angle: 60,
      spread: 55,
      origin: { x: 0 },
      colors: colors
    });
    confetti({
      particleCount: 2,
      angle: 120,
      spread: 55,
      origin: { x: 1 },
      colors: colors
    });

    if (Date.now() < end) {
      requestAnimationFrame(frame);
    }
  }());
</script>
'))

```

```{r, Calling the packages}
#| include: false
#| echo: false

library(tidyverse)
library(readxl)
library(dplyr)
library(gt)
```

```{r, Data pre-processing}
#| include: false
#| echo: false
data <- read_excel("files/students_participation_tracker.xlsx", sheet="Sheet1")

modified_data <- data |>
  rename(
    Name = "nick_name",
    week_1 = "weekcc1",
    week_2 = "weekcc2",
    week_3 = "weekcc3",
    week_4 = "weekcc4",
    week_5 = "weekcc5",
    week_9 = "weekcc9",
    week_10 = "weekcc10",
    tech_test = "Technology test",
    preliminary_survey = "Preliminary survey",
    midterm_survey = "Midterm survey",
    exit_survey = "Exit Survey",
    in_class_participation = "In-class participation",
    teams_participation = "Teams participationon",
    challenges = "Challenges"
  ) |>
  mutate(
    "Weekly Activity Overall" = week_1 + week_2 + week_3 + week_4 + week_5 + week_9+week_10,
    "Survey/Poll/Tech. Test" = tech_test + preliminary_survey + midterm_survey + exit_survey,
    "In-Class Participation" = in_class_participation,
    "Teams Participation" = teams_participation,
    "Challenges" = challenges
  )

```

```{r, Create Tables}
#| include: false
#| echo: false
final_weekly_activity_table <- modified_data |> 
  select(Name, `Weekly Activity Overall`) |> 
  arrange(desc(`Weekly Activity Overall`)) |> 
  mutate(Rank = dense_rank(desc(`Weekly Activity Overall`)), 
         Points = round(`Weekly Activity Overall`, 2)) |> 
  select(Rank, Name, Points) |> 
  filter(!is.na(Name))

final_survey_test_table <- modified_data |> 
  select(Name, `Survey/Poll/Tech. Test`) |> 
  arrange(desc(`Survey/Poll/Tech. Test`)) |> 
  mutate(Rank = dense_rank(desc(`Survey/Poll/Tech. Test`)), 
         Points = round(`Survey/Poll/Tech. Test`, 2)) |> 
  select(Rank, Name, Points) |> 
  filter(!is.na(Name))

final_inclass_participation_table <- modified_data |> 
  select(Name, `In-Class Participation`) |> 
  arrange(desc(`In-Class Participation`)) |> 
  mutate(Rank = dense_rank(desc(`In-Class Participation`)), 
         Points = round(`In-Class Participation`, 2)) |> 
  select(Rank, Name, Points) |> 
  filter(!is.na(Name))

final_teams_participation_table <- modified_data |> 
  select(Name, `Teams Participation`) |> 
  arrange(desc(`Teams Participation`)) |> 
  mutate(Rank = dense_rank(desc(`Teams Participation`)), 
         Points = round(`Teams Participation`, 2)) |> 
  select(Rank, Name, Points) |> 
  filter(!is.na(Name))

final_professionalism_table <- modified_data |> 
  select(Name, Professionalism) |> 
  arrange(desc(Professionalism)) |> 
  mutate(Rank = dense_rank(desc(Professionalism)), 
         Points = round(Professionalism, 2)) |> 
  select(Rank, Name, Points) |> 
  filter(!is.na(Name))

final_challenges_table <- modified_data |> 
  select(Name, `Challenges`) |> 
  arrange(desc(`Challenges`)) |> 
  mutate(Rank = dense_rank(desc(`Challenges`)), 
         Points = round(`Challenges`, 2)) |> 
  select(Rank, Name, Points) |> 
  filter(!is.na(Name))

final_overall_performance_table <- modified_data |> 
  mutate(Points= `Weekly Activity Overall`+ `Survey/Poll/Tech. Test` + `In-Class Participation` + `Teams Participation` + Professionalism + Challenges) |> 
  arrange(desc(Points)) |> 
  mutate(Rank = dense_rank(desc(Points)), 
         Points = round(Points, 2)) |> 
  select(Rank, Name, Points) |> 
  filter(!is.na(Name))

```

```{r, Create gt tables}
#| include: false
#| echo: false
final_weekly_activity_table_gt <- final_weekly_activity_table |> 
  gt() |> 
  cols_label(
    Rank = md("**Rank**"),
    Name = md("**Name**"),
    Points = md("**Points**")
  ) |> 
  tab_header(
    title = md("**Coding Checkups Score**")
  ) |> 
  cols_width(
    everything() ~ px(100)  # Adjust the width as needed
  ) |> 
  cols_align(
    align = "center",
    columns = c(Name,Rank,Points)
  )

final_survey_test_table_gt <- final_survey_test_table |> 
  gt() |> 
  cols_label(
    Rank = md("**Rank**"),
    Name = md("**Name**"),
    Points = md("**Points**")
  ) |> 
  tab_header(
    title = md("**Others**")
  ) |> 
  cols_width(
    everything() ~ px(100)  # Adjust the width as needed
  ) |> 
  cols_align(
    align = "center",
    columns = c(Name,Rank,Points)
  )

final_inclass_participation_table_gt <- final_inclass_participation_table  |> 
  gt() |> 
  cols_label(
    Rank = md("**Rank**"),
    Name = md("**Name**"),
    Points = md("**Points**")
  ) |> 
  tab_header(
    title = md("**In-Class Participation**")
  ) |>
  cols_width(
    everything() ~ px(100)  # Adjust the width as needed
  ) |> 
  cols_align(
    align = "center",
    columns = c(Name,Rank,Points)
  )

final_teams_participation_table_gt <- final_teams_participation_table  |> 
  gt() |> 
  cols_label(
    Rank = md("**Rank**"),
    Name = md("**Name**"),
    Points = md("**Points**")
  ) |> 
  tab_header(
    title = md("**Teams Participation**")
  ) |> 
  cols_width(
    everything() ~ px(100)  # Adjust the width as needed
  ) |> 
  cols_align(
    align = "center",
    columns = c(Name,Rank,Points)
  )

final_professionalism_table_gt <- final_professionalism_table  |> 
  gt() |> 
  cols_label(
    Rank = md("**Rank**"),
    Name = md("**Name**"),
    Points = md("**Points**")
  ) |> 
  tab_header(
    title = md("**Professionalism**")
  ) |>
  cols_width(
    everything() ~ px(100)  # Adjust the width as needed
  ) |> 
  cols_align(
    align = "center",
    columns = c(Name,Rank,Points)
  )

final_challenges_table_gt <- final_challenges_table  |> 
  gt() |> 
  cols_label(
    Rank = md("**Rank**"),
    Name = md("**Name**"),
    Points = md("**Points**")
  ) |> 
  tab_header(
    title = md("**Challenges**")
  ) |>
  cols_width(
    everything() ~ px(100)  # Adjust the width as needed
  ) |> 
  cols_align(
    align = "center",
    columns = c(Name,Rank,Points)
  )

final_overall_performance_table_gt <- final_overall_performance_table  |> 
  gt() |> 
  cols_label(
    Rank = md("**Rank**"),
    Name = md("**Name**"),
    Points = md("**Points**")
  ) |> 
  tab_header(
    title = md("**Overall Learning Score**")
  )  |> 
  cols_width(
    everything() ~ px(100)  # Adjust the width as needed
  ) |> 
  cols_align(
    align = "center",
    columns = c(Name, Rank, Points)
  ) |> 
  tab_style(
    style = list(
      cell_fill(color = "lightgreen")  # You can adjust the color as needed
    ),
    locations = cells_body(
      rows = Rank %in% 1:5  # Apply the style only to ranks 1 to 5
    )
  )



```

```{r, Convert gt tables to html}
#| include: false
#| echo: false
final_weekly_activity_table_html <- as.character(as_raw_html(final_weekly_activity_table_gt))
final_survey_test_table_html <- as.character(as_raw_html(final_survey_test_table_gt))
final_inclass_participation_table_html <- as.character(as_raw_html(final_inclass_participation_table_gt))
final_teams_participation_table_html <- as.character(as_raw_html(final_teams_participation_table_gt))
final_professionalism_table_html <- as.character(as_raw_html(final_professionalism_table_gt))
final_challenges_table_html <- as.character(as_raw_html(final_challenges_table_gt))
final_overall_performance_table_html <- as.character(as_raw_html(final_overall_performance_table_gt))

```

```{r, Pass data to OJS}
#| include: false
#| echo: false
ojs_define(final_weekly_activity_table_html, final_survey_test_table_html, final_inclass_participation_table_html,final_teams_participation_table_html, final_professionalism_table_html,final_challenges_table_html, final_overall_performance_table_html)
```

```{ojs}
//| echo: false
import { Select } from "@observablehq/inputs";
viewof tableSelector = Select(["Overall Learning Score", "Coding Checkups Score", "In-Class Participation", "Teams Participation", "Professionalism", "Challenges", "Others"], {label: "Choose a category:"})


```

##  {.tabset}

```{ojs}
//| echo: false
html`<div id="table-container" style="overflow-x:auto; max-width: 100%;"></div>`
{
  const selectedTable = tableSelector;
  let tableHTML;

  if (selectedTable === "Overall Learning Score") {
    tableHTML = final_overall_performance_table_html;
  } else if (selectedTable === "Coding Checkups Score") {
    tableHTML = final_weekly_activity_table_html;
  } else if (selectedTable === "In-Class Participation") {
    tableHTML = final_inclass_participation_table_html;
  } else if (selectedTable === "Teams Participation") {
    tableHTML = final_teams_participation_table_html;
  } else if (selectedTable === "Professionalism") {
    tableHTML = final_professionalism_table_html;
  } else if (selectedTable === "Challenges") {
    tableHTML = final_challenges_table_html;
  } else if (selectedTable === "Others") {
    tableHTML = final_survey_test_table_html;
  } else {
    tableHTML = final_overall_performance_table_html;
  }

  document.getElementById("table-container").innerHTML = tableHTML;
  // Explicitly return nothing to prevent "undefined" from being displayed
  return "Reach out to Dr. B or Venkata for any queries regarding your scores.";
}

```

::: callout-tip
## Tip

Stay positive and keep pushing forward! If you're working hard but not yet where you want to be, there's plenty of time to improve. If you're doing well, remember that rankings can change, so keep up the effort. Consistent work will help you reach or maintain your goals. You've got this ![💪](https://statics.teams.cdn.office.net/evergreen-assets/personal-expressions/v2/assets/emoticons/muscle/default/30_f.png?v=v45){alt="💪"}
:::
